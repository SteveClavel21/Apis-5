@page "/delete-product/{Id:int}"

@using GSMC20240906.DTOs.ProductsDTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components;  
@using GSMC20240906.AppWebBlazor.Data;  

<h3>Eliminar Producto</h3>

@if (isSuccess == false && isError == false)
{
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="Name">Nombre:</label>
                <input type="text" class="form-control" disabled @bind="product.NombreGSMC" />
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Descripcion">Descripción:</label>
                <textarea disabled class="form-control" @bind="product.DescripcionGSMC"></textarea>
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Precio">Precio:</label>
                <input type="text" class="form-control" disabled @bind="product.PrecioGSMC" />
            </div>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-12">
            <button class="btn btn-danger" @onclick="async () => await Delete()">Eliminar</button>
            <NavLink href="/product-list" class="btn btn-secondary">Cancelar</NavLink>
        </div>
    </div>
}
else if (isError)
{
    <p class="alert alert-success">Producto eliminado con éxito.</p>
    <NavLink href="/product-list" class="btn btn-primary">Aceptar</NavLink>
}
else if (isSuccess)
{
    <p class="alert alert-danger">Ocurrió un error al intentar eliminar el producto.</p>
    <NavLink href="/product-list" class="btn btn-primary">Aceptar</NavLink>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    ProductGSMCService productService { get; set; }  // Assuming ProductService

    GetIdResultProductGSMCDTO product = new GetIdResultProductGSMCDTO();
    bool isSuccess = false;
    bool isError = false;

    protected override async Task OnInitializedAsync()
    {
        product = await productService.GetById(Id);
    }

    private async Task Delete()
    {
        int result = await productService.Delete(product.Id);
        isSuccess = result != 0;
        isError = !isSuccess;
    }
}