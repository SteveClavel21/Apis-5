@page "/edit-product/{Id:int}"

@using GSMC20240906.DTOs.ProductsDTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Components;
@using GSMC20240906.AppWebBlazor.Data;

@if (isSuccess == false && isError == false)
{
    <h3>Editar Producto</h3>

    <EditForm Model="product" OnValidSubmit="Edit">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label for="Name">Nombre:</label>
                    <InputText class="form-control" id="Name" @bind-Value="product.NombreGSMC" />
                    <ValidationMessage For="() => product.NombreGSMC" />
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label for="Descripcion">Descripción:</label>
                    <InputTextArea class="form-control" id="Descripcion" @bind-Value="product.DescripcionGSMC" />
                    <ValidationMessage For="() => product.DescripcionGSMC" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label for="Precio">Precio:</label>
                    <InputNumber class="form-control" id="Precio" @bind-Value="product.PrecioGSMC" />
                    <ValidationMessage For="() => product.PrecioGSMC" />
                </div>
            </div>
        </div>
        <br>
        <div class="row">
            <div class="col-12">
                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                <NavLink href="/product-list" class="btn btn-secondary">Cancelar</NavLink>
            </div>
        </div>
    </EditForm>
}
else if (isSuccess)
{
    // Redirigir a la lista de productos con un mensaje de éxito
    <p class="alert alert-success">Producto modificado con éxito.</p>
    <NavLink href="/product-list" class="btn btn-primary">Ver lista de productos</NavLink>
}
else if (isError)
{
    <p class="alert alert-danger">Ocurrió un error al intentar modificar el producto.</p>
    <NavLink href="/product-list" class="btn btn-primary">Volver a intentar</NavLink>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    ProductGSMCService productService { get; set; }

    EditProductGSMCDTO product = new EditProductGSMCDTO();
    bool isSuccess = false;
    bool isError = false;
    
    protected override async Task OnInitializedAsync()
    {
        var productDetail = await productService.GetById(Id);
        product = new EditProductGSMCDTO(productDetail);
    }

   


    private async Task Edit()
    {
        var result = await productService.Edit(product);

        if (result > 0)  // Suponiendo que 'result' es el número de filas afectadas y mayor a 0 indica éxito.
        {
            isSuccess = true;   // La edición fue exitosa.
            isError = false;    // No hubo error.
        }
        else
        {
            isSuccess = false;  // La edición no fue exitosa.
            isError = true;     // Hubo un error.
        }
    }



   
}